---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <input type="file" id="file" accept="image/*" multiple />
  <button id="downloadAll" style="display: none;">Descargar todas las im√°genes</button>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
  <script>
    document.getElementById("file").addEventListener("change", function (event) {
      const files = event.target.files;
      if (!files.length) return;

      const zip = new JSZip();
      let processedImages = 0;

      for (let file of files) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const img = new Image();
          img.onload = function () {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");

            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0);

            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
            const data = imageData.data;

            function isNearColor(r, g, b, targetR, targetG, targetB, threshold = 10) {
              return (
                Math.abs(r - targetR) < threshold &&
                Math.abs(g - targetG) < threshold &&
                Math.abs(b - targetB) < threshold
              );
            }

            for (let i = 0; i < data.length; i += 4) {
              const r = data[i];
              const g = data[i + 1];
              const b = data[i + 2];

              if (r > 200 && g > 200 && b > 200) {
                data[i] = 0;
                data[i + 1] = 0;
                data[i + 2] = 0;
              } else if (
                isNearColor(r, g, b, 43, 42, 40) ||
                isNearColor(r, g, b, 69, 70, 72) ||
                isNearColor(r, g, b, 53, 53, 55)
              ) {
                data[i] = 255;
                data[i + 1] = 255;
                data[i + 2] = 255;
              }
            }

            ctx.putImageData(imageData, 0, 0);
            const imgData = canvas.toDataURL("image/png").split(",")[1];
            zip.file(`inverted-${file.name}.png`, imgData, { base64: true });
            processedImages++;

            if (processedImages === files.length) {
              document.getElementById("downloadAll").style.display = "block";
            }
          };
          img.src = e.target.result;
        };
        reader.readAsDataURL(file);
      }

      document.getElementById("downloadAll").onclick = function () {
        zip.generateAsync({ type: "blob" }).then(function (content) {
          const a = document.createElement("a");
          a.href = URL.createObjectURL(content);
          a.download = "imagenes-invertidas.zip";
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
        });
      };
    });
  </script>
</Layout>
